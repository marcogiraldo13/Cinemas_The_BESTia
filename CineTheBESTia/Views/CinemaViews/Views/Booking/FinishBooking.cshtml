@model Domain.BookingViewModel
@{
    ViewData["Title"] = "Finish Booking";
}

<div class="well">
    @Html.Partial("_MovieDetail", new MovieDetailViewModel { MovieSelectDetail = Model.BookingMovie })
</div>

<form asp-action="Booking" method="post" enctype="multipart/form-data">
    @Html.HiddenFor(x => x.BookingMovie.Id)
    @Html.HiddenFor(x => x.BookingMovie.original_title)
    @Html.HiddenFor(x => x.BookingMovie.original_language)
    @Html.HiddenFor(x => x.BookingMovie.vote_average)
    @Html.HiddenFor(x => x.BookingMovie.overview)
    @Html.HiddenFor(x => x.BookingMovie.release_date)
    @Html.HiddenFor(x => x.BookingMovie.image)
    @Html.HiddenFor(x => x.BookingMovie.video)
    @Html.HiddenFor(x => x.BookingMovie.vote_count)
    @Html.HiddenFor(x => x.BookingMovie.title)
    @Html.HiddenFor(x => x.BookingMovie.popularity)
    @Html.HiddenFor(x => x.BookingMovie.poster_path)
    @Html.HiddenFor(x => x.BookingMovie.backdrop_path)
    @Html.HiddenFor(x => x.BookingMovie.adult)
    @Html.HiddenFor(x => x.BookingMovie.Photo_Link)
    @Html.HiddenFor(x => x.BookingCost)
    @Html.HiddenFor(x => x.FunctionMovie)


    <div>
        @{
            string seats = string.Empty;
            @foreach (var item in Model.SeatList.Where(x => x.isavailable == true))
            {
                seats += item.seat_number + ",";
            }
            <h3>Total To Pay: @Model.BookingCost</h3>
            <h3>Seats: @seats</h3>
        }
    </div>

    <div>
        <button class="btn btn-success" type="submit">Pay</button>
    </div>
</form>